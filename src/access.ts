/**
 * @see https://umijs.org/zh-CN/plugins/plugin-access
 * */
import type { Dictionary } from 'lodash';
import _values from 'lodash/values';

export const AuthorityMap = {
  // 客户
  CUSTOMER_LIST: 'CUSTOMER_LIST',
  // 新增或编辑客户
  MODIFY_CUSTOMER: 'MODIFY_CUSTOMER',

  // 服务商
  PROVIDER_LIST: 'PROVIDER_LIST',
  // 新增或编辑服务商
  MODIFY_COMPANY: 'MODIFY_COMPANY',

  // 销售员
  SELLER_LIST: 'SELLER_LIST',
  // 添加或编辑销售员
  MODIFY_SELLER: 'MODIFY_SELLER',
  // 销售佣金明细
  SELLER_COMMISSIONS: 'SELLER_COMMISSIONS',
  // 修改佣金
  EDIT_SELLER_COMMISSIONS: 'EDIT_SELLER_COMMISSIONS',
  // 佣金设置
  SELLER_COMBO_COMMISSIONS: 'SELLER_COMBO_COMMISSIONS',

  // 线路套餐
  PRODUCT_COMBO_HOME: 'PRODUCT_COMBO_HOME',

  // 产品-服务渠道
  SERVICE_CHANNEL_HOME: 'SERVICE_CHANNEL_HOME',
  // 产品-服务渠道列表
  SERVICE_CHANNEL_LIST: 'SERVICE_CHANNEL_LIST',
  // 产品-服务渠道详情
  SERVICE_CHANNEL_DETAIL: 'SERVICE_CHANNEL_DETAIL',
  // 产品-服务渠道报价
  SERVICE_CHANNEL_QUOTE: 'SERVICE_CHANNEL_QUOTE',

  // 产品-线路产品
  PRODUCT_LINE_HOME: 'PRODUCT_LINE_HOME',
  // 产品-线路产品列表
  PRODUCT_LINE_LIST: 'PRODUCT_LINE_LIST',
  // 产品-线路产品报价
  PRODUCT_LINE_QUOTE: 'PRODUCT_LINE_QUOTE',
  // 产品-线路产品详情
  PRODUCT_LINE_DETAIL: 'PRODUCT_LINE_DETAIL',

  // 客服
  CUSTOMER_SERVICE_HOME: 'CUSTOMER_SERVICE_HOME',
  // 客服-包裹预报
  CUSTOMER_SERVICE_FORECAST: 'CUSTOMER_SERVICE_FORECAST',
  // 客服-包裹查询
  CUSTOMER_SERVICE_PACKAGE: 'CUSTOMER_SERVICE_PACKAGE',
  // 客服-包裹查询详情
  CUSTOMER_SERVICE_PACKAGE_DETAIL: 'CUSTOMER_SERVICE_PACKAGE_DETAIL',
  // 无主包裹
  CUSTOMER_SERVICE_DERELICTION: 'CUSTOMER_SERVICE_DERELICTION',
  // 无主包裹详情
  CUSTOMER_SERVICE_DERELICTION_DETAIL: 'CUSTOMER_SERVICE_DERELICTION_DETAIL',
  // 尾程包裹
  CUSTOMER_SERVICE_PACKAGE_TERMINAL: 'CUSTOMER_SERVICE_PACKAGE_TERMINAL',
  // 尾程包裹详情
  CUSTOMER_SERVICE_PACKAGE_TERMINAL_DETAIL: 'CUSTOMER_SERVICE_PACKAGE_TERMINAL_DETAIL',
  // 客服-装袋批次
  CUSTOMER_SERVICE_SEARCHPACK: 'CUSTOMER_SERVICE_SEARCHPACK',
  // 客服-轨迹录入
  CUSTOMER_SERVICE_EXPRESS_TRACE: 'CUSTOMER_SERVICE_EXPRESS_TRACE',
  // 客服-客户费用录入
  CUSTOMER_SERVICE_CUSTOMER_FEE_TRACE: 'CUSTOMER_SERVICE_CUSTOMER_FEE_TRACE',
  // 客服-服务商费用录入
  CUSTOMER_SERVICE_PROVIDER_FEE_TRACE: 'CUSTOMER_SERVICE_PROVIDER_FEE_TRACE',
  // 客服-异常处理
  CUSTOMER_SERVICE_ABNORMAL: 'CUSTOMER_SERVICE_ABNORMAL',
  // 客服-出货总单
  CUSTOMER_SERVICE_MANIFEST_SHIPMENT: 'CUSTOMER_SERVICE_MANIFEST_SHIPMENT',
  // 客服-出货总单
  CUSTOMER_SERVICE_REPLACE_LABEL: 'CUSTOMER_SERVICE_REPLACE_LABEL',

  // 财务
  FINANCE_HOME: 'FINANCE_HOME',
  // 财务-客户计费明细
  FINANCE_CUSTOMER_BILL_DETAIL: 'FINANCE_CUSTOMER_BILL_DETAIL',
  // 财务-服务商计费明细
  FINANCE_SERVICE_BILL_DETAIL: 'FINANCE_SERVICE_BILL_DETAIL',
  // 财务-客户账单
  FINANCE_CUSTOMER_BILL: 'FINANCE_CUSTOMER_BILL',
  // 财务-服务商账单
  FINANCE_SERVICE_BILL: 'FINANCE_SERVICE_BILL',
  // 财务-包裹成本分析
  FINANCE_COST_PACKAGE: 'FINANCE_COST_PACKAGE',
  // 财务-客户费用审核
  FINANCE_CUSTOMER_AUDIT: 'FINANCE_CUSTOMER_AUDIT',
  // 财务-服务商费用审核
  FINANCE_SERVICE_AUDIT: 'FINANCE_SERVICE_AUDIT',
  // 财务-包裹修改客户
  FINANCE_PACKAGE_CUSTOMER_EDIT: 'FINANCE_PACKAGE_CUSTOMER_EDIT',
  // 财务-计费失败记录
  BILLING_FAILED_LIST: 'BILLING_FAILED_LIST',

  // 设置
  SETTING_HOME: 'SETTING_HOME',
  // 设置-基础设置
  SETTING_BASE: 'SETTING_BASE',
  // 设置-号码段配置
  SETTING_CODE_SEGMENTS: 'SETTING_CODE_SEGMENTS',
  // 设置-号码池配置
  SETTING_CODE_POOL: 'SETTING_CODE_POOL',
  // 设置-运营组织机构
  SETTING_OPERATING_ORGANIZATIONS: 'SETTING_OPERATING_ORGANIZATIONS',

  // 系统
  SYSTEM: 'SYSTEM',
  // 操作日志
  SYSTEM_OPERATION_LOG_HOME: 'SYSTEM_OPERATION_LOG_HOME',
  // 角色管理
  SYSTEM_ROLE_MANAGE: 'SYSTEM_ROLE_MANAGE',
  // 用户管理
  SYSTEM_USER_MANAGE: 'SYSTEM_USER_MANAGE',

  // 产品-仓储
  PRODUCT_WAREHOUSE_LIST: 'PRODUCT_WAREHOUSE_LIST',

  // 产品-干配/承运商
  PRODUCT_CARRIER_LIST: 'PRODUCT_CARRIER_LIST',

  // 产品-资源报价
  PRODUCT_RESOURCE_INQUIRY_LIST: 'PRODUCT_RESOURCE_INQUIRY_LIST',

  // 结算-客户结算
  SETTLEMENT_CUSTOMER_LIST: 'SETTLEMENT_CUSTOMER_LIST',

  // 结算-服务商结算
  SETTLEMENT_PROVIDER_LIST: 'SETTLEMENT_PROVIDER_LIST',
} as const;

const allAuthorities = _values(AuthorityMap);

const defaultAuthorities = {};

export default function access(initialState: { authorities?: Dictionary<boolean> }) {
  const { authorities } = initialState || {};

  const testAuthorities = process.env.NODE_ENV === 'development' ? defaultAuthorities : {};

  const finalAuthorities = allAuthorities.reduce((memo, auth) => {
    memo[auth] = authorities?.[auth] ?? false;
    return memo;
  }, {});

  return {
    ...finalAuthorities,
    ...testAuthorities,
  };
}
